name: Release

on:
  push:
    branches:
      - main
      - staging

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  validate:
    name: Validate Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          HUSKY: 0

      - name: Validate Commits
        run: |
          # For pushes, check only the latest commit if it's not a merge or release commit
          commit_msg=$(git log -1 --format=%B)
          if [[ ! $commit_msg =~ ^Merge\ branch && ! $commit_msg =~ ^chore\(release\): ]]; then
            echo "$commit_msg" | npx commitlint
          fi

  release:
    name: Create Release
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          HUSKY: 0

      - name: Verify Package Integrity
        run: npm audit signatures

      - name: Setup Shopify CLI
        run: |
          npm install -g @shopify/cli @shopify/theme

      - name: Configure Git User
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE_URL }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
        run: npx semantic-release
