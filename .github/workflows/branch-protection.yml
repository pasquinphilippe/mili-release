name: Branch Protection

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  check_target_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check target branch
        run: |
          BASE_BRANCH="${{ github.base_ref }}"
          HEAD_BRANCH="${{ github.head_ref }}"

          # Function to extract branch type
          get_branch_type() {
            if [[ $1 == feature/* ]] || [[ $1 == fix/* ]] || [[ $1 == docs/* ]] || [[ $1 == chore/* ]]; then
              echo "feature"
            elif [[ $1 == "staging" ]]; then
              echo "staging"
            elif [[ $1 == "main" ]]; then
              echo "main"
            else
              echo "unknown"
            fi
          }

          HEAD_TYPE=$(get_branch_type "$HEAD_BRANCH")
          BASE_TYPE=$(get_branch_type "$BASE_BRANCH")

          # Enforce branching rules
          if [[ $HEAD_TYPE == "feature" && $BASE_BRANCH != "staging" ]]; then
            echo "❌ Error: Feature branches must target 'staging' branch"
            exit 1
          fi

          if [[ $HEAD_BRANCH == "staging" && $BASE_BRANCH != "main" ]]; then
            echo "❌ Error: 'staging' branch can only be merged into 'main'"
            exit 1
          fi

          if [[ $BASE_BRANCH == "main" && $HEAD_BRANCH != "staging" ]]; then
            echo "❌ Error: Only 'staging' branch can be merged into 'main'"
            exit 1
          fi

          echo "✅ Branch protection rules passed"

      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const message = `## ❌ Invalid Target Branch

            This PR cannot be merged due to branch protection rules:

            - Feature branches (\`feature/*\`, \`fix/*\`, \`docs/*\`) must target \`staging\`
            - Only \`staging\` can be merged into \`main\`
            - \`main\` can only accept merges from \`staging\`

            Please update your PR to target the correct branch.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
