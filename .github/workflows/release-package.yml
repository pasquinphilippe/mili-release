name: Release and Publish

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

permissions:
  contents: read # This is the default for security

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          HUSKY: 0

      - name: Run tests
        run: npm test

      - name: Lint commits
        run: npx commitlint --from ${{ github.event.before }} --to ${{ github.event.after }} --verbose

  release:
    name: Create Release
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      contents: write      # Required for creating releases
      issues: write       # Required for creating issues
      pull-requests: write # Required for commenting on PRs
      id-token: write     # Required for authentication
      packages: write     # Required for publishing packages
      security-events: write # Required for security purposes
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Install dependencies
        run: npm ci
        env:
          HUSKY: 0
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Create .npmrc file with scope
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "@milistack:registry=https://registry.npmjs.org/" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc

          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          npx semantic-release

  publish:
    name: Publish to NPM
    needs: release
    if: |
      needs.release.outputs.new_release_published == 'true' &&
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write     # Required for publishing packages
      security-events: write # Required for security purposes
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          always-auth: true

      - name: Install dependencies
        run: npm ci
        env:
          HUSKY: 0
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify package integrity
        run: npm audit signatures

      - name: Create .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "@milistack:registry=https://registry.npmjs.org/" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing version ${{ needs.release.outputs.new_release_version }}"
          npm publish --access public
